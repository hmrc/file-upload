# Copyright 2020 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

appName = file-upload

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.http.filters = "uk.gov.hmrc.fileupload.Filters"

play.http.errorHandler = "uk.gov.hmrc.fileupload.GlobalErrorHandler"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key = "4KvYBsdAQ6WjwjEOCbWcEE00QZVueED3Gpy7YmbBJTfP64DO8YCcihTX34b4szjO"

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = uk.gov.hmrc.fileupload.prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.fileupload.controllers.MicroserviceHelloWorld = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.fileupload.controllers.FileController = {
    needsAuditing = false
  }

  uk.gov.hmrc.fileupload.controllers.transfer.TransferController = {
    needsAuditing = false
  }

}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis

microservice {

  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    file-upload-frontend {
      host = localhost
      port = 8899
    }
  }
}


feature {
  basicAuthEnabled = false
}

basicAuth {
  authorizedUsers = "konrad:konradspassword;yuan:yaunspassword"
}

constraints {
  accepted {
    maxItems = 100
    maxSize = "250MB"
    maxSizePerItem = "100MB"
  }
  default {
    maxItems = 100
    maxSize = "25MB"
    maxSizePerItem = "10MB"
    allowZeroLengthFiles = true
  }
  maxExpiryDuration = 60 days
  defaultExpiryDuration = 10 days
  enforceHttps = true
}

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = MILLISECONDS
  showSamples = true
  jvm = true
  enabled = true
}


# Microservice specific config

auditing {
  enabled = true
  enabled = ${?AUDITING_ENABLED}
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

akka {
  loglevel = "DEBUG"
  actors {
    receive = on
    lifecycle = on
  }
}

stats {
  inprogressfiles {
    initialdelay = 1 minute
    interval = 1 minute
    timeperiod = 1 day
  }
}

mongodb {
  uri = "mongodb://localhost:27017/file-upload"
  replicaSetInUse = false
}

microservice.services.self.host: "file-upload.public"

routing {
  initialDelay = 1.second
  interval     = 1.minute

  pushUrl  = "http://localhost:9191/sdes-stub/notification/fileready"
  clientId = 1234
  destinations.0 = SDES-STUB
}
