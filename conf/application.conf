# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

appName = file-upload

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

play.http.errorHandler = "uk.gov.hmrc.fileupload.GlobalErrorHandler"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.
controllers {
  uk.gov.hmrc.fileupload.controllers.FileController = {
    needsAuditing = false
  }

  uk.gov.hmrc.fileupload.controllers.transfer.TransferController = {
    needsAuditing = false
  }
}

microservice {
  services {
    file-upload-frontend {
      host = localhost
      port = 8899
    }
  }
}


constraints {
  accepted {
    maxItems = 100
    maxSize = "250MB"
    maxSizePerItem = "100MB"
  }
  default {
    maxItems = 100
    maxSize = "25MB"
    maxSizePerItem = "10MB"
    allowZeroLengthFiles = true
  }
  maxExpiryDuration = 60 days
  defaultExpiryDuration = 10 days
  enforceHttps = true
}

pekko {
  loglevel = "DEBUG"
  actors {
    receive = on
    lifecycle = on
  }
}

stats {
  inprogressfiles {
    initialdelay = 1.minute
    interval     = 1.minute
    timeperiod   = 1.day
    maximum      = null # if defined, will log a warning if this is exceeded
  }
}

mongodb {
  uri = "mongodb://localhost:27017/file-upload"
}

microservice.services.self.host: "file-upload.public"

routing {
  initialDelay      = 1.second
  interval          = 1.minute
  pushUrl           = "http://localhost:9191/sdes-stub/notification/fileready"
  clientId          = 1234
  recipientOrSender = fileUpload # as configured in sdes-stub
  destinations.0    = SDES-STUB
  informationType   = UNDEFINED
  throttleElements  = 170
  throttlePer       = 10.minute
  markAsSeenStatuses = ["CLOSED"]
  pushRetryBackoff   = 30.minutes
}

purge.enabled = false
purge.cutoff = 730.days
